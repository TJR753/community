<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.community.mapper.MessageMapper">
    <sql id="selectFields">id,from_id,to_id,conversation_id,content,status,create_time</sql>
    <sql id="insertFields">from_id,to_id,conversation_id,content,status,create_time</sql>
    <select id="selectConversations" resultType="message">
        select <include refid="selectFields"></include> from message where id in(
        select max(id) from message
        where status!=2 and from_id!=1
        and (to_id=#{userId} or from_id=#{userId})
        group by conversation_id)
        order by id desc
        limit #{offset},#{limit}
    </select>
    <select id="selectConversationCount" resultType="int">
        select count(m.maxid)
        from (
                 select max(id) as maxid
                 from message
                 where status!=2 and from_id!=1
        and (to_id=#{userId}
                    or from_id=#{userId})
                 group by conversation_id
              )as m
    </select>
    <select id="selectLetters" resultType="message">
        select <include refid="selectFields"></include> from message
        where status!=2 and from_id!=1
        and conversation_id=#{conversationId}
        limit #{offset},#{limit}
    </select>
    <select id="selectLetterCount" resultType="int">
        select count(*) from message
        where status!=2 and from_id!=1
        and conversation_id=#{conversationId}
    </select>
    <select id="selectUnreadLetterCount" resultType="int">
        select count(*) from message
        <where>
            status=0 and from_id!=1 and to_id=#{userId}
            <if test="conversationId!=null">
                and conversation_id=#{conversationId}
            </if>
        </where>
    </select>
    <insert id="insertMessage" keyProperty="id">
        insert into message(<include refid="insertFields"></include>)
        values(#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>
    <update id="updateStatus">
        update message set status=1 where conversation_id=#{conversationId} and to_id=#{userId}
    </update>
    <update id="updateStatusById">
        update message set status=2 where id=#{id}
    </update>

</mapper>
